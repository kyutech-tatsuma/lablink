{"ast":null,"code":"var _jsxFileName = \"/Users/furuyatatsuma/Desktop/lablink/src/Loginform.js\",\n  _s = $RefreshSig$();\nimport \"./Loginform.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Loginform = _ref => {\n  _s();\n  let {\n    baseurl\n  } = _ref;\n  //ユーザー情報を格納するオブジェクトを生成する\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  //フォームに入力された値を格納する状態変数を準備する\n  const [formValues, setFormValues] = useState(initialValues);\n  //エラーメッセージを格納するためのオブジェクト\n  const [formErrors, setFormErrors] = useState({});\n  //ログインボタンが押されたかどうかを判別するオブジェクト\n  const [isSubmit, setIsSubmit] = useState(false);\n  //ログイン状態を判別するステート\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  //ログイン情報をサーバーに送信し、アクセストークンを取得する関数\n  async function login(username, password) {\n    try {\n      const response = await axios.post(`${baseurl}/token`, qs.stringify({\n        \"username\": username,\n        \"password\": password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token\n      } = response.data;\n      return access_token;\n    } catch (error) {\n      console.error(error); // エラーの詳細をログに出力\n      return \"\"; // エラーが発生した場合は空文字を返す\n    }\n  }\n\n  ;\n\n  //アクセストークンをローカルストレージに保存する関数\n  function saveToken(token, username) {\n    localStorage.setItem('access_token', token);\n    localStorage.setItem('T-lab_username', username);\n  }\n  async function getUserId(username) {\n    try {\n      const response = await axios.get(`${baseurl}/user/`);\n      const users = response.data;\n      const user = users.find(user => user.name === username);\n      if (user) {\n        return user.id;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  //フォームに入力された値を取り出す関数\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //バリデーションチェックする\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n    setFormValues(initialValues);\n    //エラーメッセージがなければログイン情報を発信する。\n    if (Object.keys(formErrors).length === 0) {\n      const token = await login(formValues.username, formValues.password);\n      if (token != \"\") {\n        saveToken(token, formValues.username);\n        setIsLoggedIn(true);\n        getUserId(formValues.username).then(id => {\n          if (id) {\n            console.log(`User ID is: ${id}`);\n            navigate('/dashboard/' + id.toString());\n          } else {\n            console.log('No user with the name \"string\" was found.');\n          }\n        });\n      } else {\n        setFormValues(initialValues);\n        setIsSubmit(false);\n        setIsLoggedIn(false);\n      }\n    } else {\n      setFormValues(initialValues);\n    }\n    ;\n  };\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = \"ユーザー名を入力してください\";\n    }\n    if (!values.password) {\n      errors.password = \"パスワードを入力してください\";\n    }\n    ;\n    return errors;\n  };\n\n  // ページロード時に既存のトークンをチェック\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    const username = localStorage.getItem('T-lab_username');\n    if (token) {\n      getUserId(username).then(id => {\n        if (id) {\n          console.log(`User ID is: ${id}`);\n          navigate('/dashboard/' + id.toString());\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            required: \"required\",\n            placeholder: \"UserName\",\n            value: formValues.username,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            required: \"required\",\n            placeholder: \"Password\",\n            value: formValues.password,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"button-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            class: \"button\",\n            title: \"Sign In\",\n            value: \"Sign In\",\n            onClick: e => handleSubmit(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"\\u3000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"\\u3000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Loginform, \"bbGw//dYsVDDl5PdPGHg+cDvxk4=\", false, function () {\n  return [useNavigate];\n});\n_c = Loginform;\nexport default Loginform;\nvar _c;\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","qs","jsxDEV","_jsxDEV","Fragment","_Fragment","Loginform","_ref","_s","baseurl","initialValues","username","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","isLoggedIn","setIsLoggedIn","navigate","login","response","post","stringify","headers","access_token","data","error","console","saveToken","token","localStorage","setItem","getUserId","get","users","user","find","name","id","handleChange","e","value","target","handleSubmit","preventDefault","validate","Object","keys","length","then","log","toString","values","errors","getItem","children","class","fileName","_jsxFileName","lineNumber","columnNumber","for","type","required","placeholder","onChange","title","onClick","href","_c","$RefreshReg$"],"sources":["/Users/furuyatatsuma/Desktop/lablink/src/Loginform.js"],"sourcesContent":["import \"./Loginform.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport qs from 'qs';\n\nconst Loginform = ({ baseurl }) => {\n    //ユーザー情報を格納するオブジェクトを生成する\n    const initialValues = { username: \"\", password: \"\" };\n    //フォームに入力された値を格納する状態変数を準備する\n    const [formValues, setFormValues] = useState(initialValues);\n    //エラーメッセージを格納するためのオブジェクト\n    const [formErrors, setFormErrors] = useState({})\n    //ログインボタンが押されたかどうかを判別するオブジェクト\n    const [isSubmit, setIsSubmit] = useState(false);\n    //ログイン状態を判別するステート\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n    const navigate = useNavigate();\n\n    //ログイン情報をサーバーに送信し、アクセストークンを取得する関数\n    async function login(username, password) {\n        try {\n            const response = await axios.post(`${baseurl}/token`, qs.stringify({\n                \"username\": username,\n                \"password\": password,\n            }), {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }\n            });\n            const { access_token } = response.data;\n            return access_token;\n        } catch (error) {\n            console.error(error);  // エラーの詳細をログに出力\n            return \"\";  // エラーが発生した場合は空文字を返す\n        }\n    };\n\n    //アクセストークンをローカルストレージに保存する関数\n    function saveToken(token, username) {\n        localStorage.setItem('access_token', token);\n        localStorage.setItem('T-lab_username', username);\n    }\n\n    async function getUserId(username) {\n        try {\n            const response = await axios.get(`${baseurl}/user/`);\n            const users = response.data;\n\n            const user = users.find(user => user.name === username);\n\n            if (user) {\n                return user.id;\n            } else {\n                return null;\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    //フォームに入力された値を取り出す関数\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        //バリデーションチェックする\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n        setFormValues(initialValues);\n        //エラーメッセージがなければログイン情報を発信する。\n        if (Object.keys(formErrors).length === 0) {\n            const token = await login(formValues.username, formValues.password);\n            if (token != \"\") {\n                saveToken(token, formValues.username);\n                setIsLoggedIn(true);\n                getUserId(formValues.username).then(id => {\n                    if (id) {\n                        console.log(`User ID is: ${id}`);\n                        navigate('/dashboard/' + id.toString());\n                    } else {\n                        console.log('No user with the name \"string\" was found.');\n                    }\n                });\n            } else {\n                setFormValues(initialValues);\n                setIsSubmit(false);\n                setIsLoggedIn(false);\n\n            }\n        } else {\n            setFormValues(initialValues);\n        };\n    }\n\n    const validate = (values) => {\n        const errors = {};\n        if (!values.username) {\n            errors.username = \"ユーザー名を入力してください\";\n        }\n        if (!values.password) {\n            errors.password = \"パスワードを入力してください\";\n        };\n        return errors;\n    };\n\n    // ページロード時に既存のトークンをチェック\n    useEffect(() => {\n        const token = localStorage.getItem('access_token');\n        const username = localStorage.getItem('T-lab_username');\n        if (token) {\n            getUserId(username).then(id => {\n                if (id) {\n                    console.log(`User ID is: ${id}`);\n                    navigate('/dashboard/' + id.toString());\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            <div class=\"form-wrapper\">\n                <h1>Sign In</h1>\n                <form>\n                    <div class=\"form-item\">\n                        <label for=\"email\"></label>\n                        <input type=\"text\" name=\"username\" required=\"required\" placeholder=\"UserName\" value={formValues.username} onChange={(e) => handleChange(e)} ></input>\n                    </div>\n                    <div class=\"form-item\">\n                        <label for=\"password\"></label>\n                        <input type=\"password\" name=\"password\" required=\"required\" placeholder=\"Password\" value={formValues.password} onChange={(e) => handleChange(e)}></input>\n                    </div>\n                    <div class=\"button-panel\">\n                        <input type=\"submit\" class=\"button\" title=\"Sign In\" value=\"Sign In\" onClick={(e) => handleSubmit(e)}></input>\n                    </div>\n                </form>\n                <div class=\"form-footer\">\n                    <p><a href=\"#\">　</a></p>\n                    <p><a href=\"#\">　</a></p>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Loginform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}